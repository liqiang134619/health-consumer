/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dycn.airportconsumer.faceplate.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OperationRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2134209185635073490L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OperationRecord\",\"namespace\":\"com.dycn.healthairport.faceplate.avro\",\"fields\":[{\"name\":\"devId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"timestamp\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"userName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"operation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"summary\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"topic\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String devId;
  @Deprecated public String timestamp;
  @Deprecated public String userName;
  @Deprecated public String operation;
  @Deprecated public String summary;
  @Deprecated public String topic;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OperationRecord() {}

  /**
   * All-args constructor.
   * @param devId The new value for devId
   * @param timestamp The new value for timestamp
   * @param userName The new value for userName
   * @param operation The new value for operation
   * @param summary The new value for summary
   * @param topic The new value for topic
   */
  public OperationRecord(String devId, String timestamp, String userName, String operation, String summary, String topic) {
    this.devId = devId;
    this.timestamp = timestamp;
    this.userName = userName;
    this.operation = operation;
    this.summary = summary;
    this.topic = topic;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return devId;
    case 1: return timestamp;
    case 2: return userName;
    case 3: return operation;
    case 4: return summary;
    case 5: return topic;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: devId = (String)value$; break;
    case 1: timestamp = (String)value$; break;
    case 2: userName = (String)value$; break;
    case 3: operation = (String)value$; break;
    case 4: summary = (String)value$; break;
    case 5: topic = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'devId' field.
   * @return The value of the 'devId' field.
   */
  public String getDevId() {
    return devId;
  }

  /**
   * Sets the value of the 'devId' field.
   * @param value the value to set.
   */
  public void setDevId(String value) {
    this.devId = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(String value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'userName' field.
   * @return The value of the 'userName' field.
   */
  public String getUserName() {
    return userName;
  }

  /**
   * Sets the value of the 'userName' field.
   * @param value the value to set.
   */
  public void setUserName(String value) {
    this.userName = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return The value of the 'operation' field.
   */
  public String getOperation() {
    return operation;
  }

  /**
   * Sets the value of the 'operation' field.
   * @param value the value to set.
   */
  public void setOperation(String value) {
    this.operation = value;
  }

  /**
   * Gets the value of the 'summary' field.
   * @return The value of the 'summary' field.
   */
  public String getSummary() {
    return summary;
  }

  /**
   * Sets the value of the 'summary' field.
   * @param value the value to set.
   */
  public void setSummary(String value) {
    this.summary = value;
  }

  /**
   * Gets the value of the 'topic' field.
   * @return The value of the 'topic' field.
   */
  public String getTopic() {
    return topic;
  }

  /**
   * Sets the value of the 'topic' field.
   * @param value the value to set.
   */
  public void setTopic(String value) {
    this.topic = value;
  }

  /**
   * Creates a new OperationRecord RecordBuilder.
   * @return A new OperationRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.OperationRecord.Builder newBuilder() {
    return new com.dycn.healthairport.faceplate.avro.OperationRecord.Builder();
  }

  /**
   * Creates a new OperationRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OperationRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.OperationRecord.Builder newBuilder(com.dycn.healthairport.faceplate.avro.OperationRecord.Builder other) {
    return new com.dycn.healthairport.faceplate.avro.OperationRecord.Builder(other);
  }

  /**
   * Creates a new OperationRecord RecordBuilder by copying an existing OperationRecord instance.
   * @param other The existing instance to copy.
   * @return A new OperationRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.OperationRecord.Builder newBuilder(com.dycn.healthairport.faceplate.avro.OperationRecord other) {
    return new com.dycn.healthairport.faceplate.avro.OperationRecord.Builder(other);
  }

  /**
   * RecordBuilder for OperationRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OperationRecord>
    implements org.apache.avro.data.RecordBuilder<OperationRecord> {

    private String devId;
    private String timestamp;
    private String userName;
    private String operation;
    private String summary;
    private String topic;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.OperationRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.devId)) {
        this.devId = data().deepCopy(fields()[0].schema(), other.devId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.operation)) {
        this.operation = data().deepCopy(fields()[3].schema(), other.operation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.summary)) {
        this.summary = data().deepCopy(fields()[4].schema(), other.summary);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.topic)) {
        this.topic = data().deepCopy(fields()[5].schema(), other.topic);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing OperationRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.OperationRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.devId)) {
        this.devId = data().deepCopy(fields()[0].schema(), other.devId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.userName)) {
        this.userName = data().deepCopy(fields()[2].schema(), other.userName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.operation)) {
        this.operation = data().deepCopy(fields()[3].schema(), other.operation);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.summary)) {
        this.summary = data().deepCopy(fields()[4].schema(), other.summary);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.topic)) {
        this.topic = data().deepCopy(fields()[5].schema(), other.topic);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'devId' field.
      * @return The value.
      */
    public String getDevId() {
      return devId;
    }

    /**
      * Sets the value of the 'devId' field.
      * @param value The value of 'devId'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setDevId(String value) {
      validate(fields()[0], value);
      this.devId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'devId' field has been set.
      * @return True if the 'devId' field has been set, false otherwise.
      */
    public boolean hasDevId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'devId' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearDevId() {
      devId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public String getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setTimestamp(String value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'userName' field.
      * @return The value.
      */
    public String getUserName() {
      return userName;
    }

    /**
      * Sets the value of the 'userName' field.
      * @param value The value of 'userName'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setUserName(String value) {
      validate(fields()[2], value);
      this.userName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'userName' field has been set.
      * @return True if the 'userName' field has been set, false otherwise.
      */
    public boolean hasUserName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'userName' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearUserName() {
      userName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * @return The value.
      */
    public String getOperation() {
      return operation;
    }

    /**
      * Sets the value of the 'operation' field.
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setOperation(String value) {
      validate(fields()[3], value);
      this.operation = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'operation' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'summary' field.
      * @return The value.
      */
    public String getSummary() {
      return summary;
    }

    /**
      * Sets the value of the 'summary' field.
      * @param value The value of 'summary'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setSummary(String value) {
      validate(fields()[4], value);
      this.summary = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'summary' field has been set.
      * @return True if the 'summary' field has been set, false otherwise.
      */
    public boolean hasSummary() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'summary' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearSummary() {
      summary = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'topic' field.
      * @return The value.
      */
    public String getTopic() {
      return topic;
    }

    /**
      * Sets the value of the 'topic' field.
      * @param value The value of 'topic'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder setTopic(String value) {
      validate(fields()[5], value);
      this.topic = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'topic' field has been set.
      * @return True if the 'topic' field has been set, false otherwise.
      */
    public boolean hasTopic() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'topic' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.OperationRecord.Builder clearTopic() {
      topic = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public OperationRecord build() {
      try {
        OperationRecord record = new OperationRecord();
        record.devId = fieldSetFlags()[0] ? this.devId : (String) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (String) defaultValue(fields()[1]);
        record.userName = fieldSetFlags()[2] ? this.userName : (String) defaultValue(fields()[2]);
        record.operation = fieldSetFlags()[3] ? this.operation : (String) defaultValue(fields()[3]);
        record.summary = fieldSetFlags()[4] ? this.summary : (String) defaultValue(fields()[4]);
        record.topic = fieldSetFlags()[5] ? this.topic : (String) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
