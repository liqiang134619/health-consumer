/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dycn.airportconsumer.faceplate.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HttpDeviceInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2444383724930353575L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HttpDeviceInfo\",\"namespace\":\"com.dycn.healthairport.faceplate.avro\",\"fields\":[{\"name\":\"devId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"displayInfo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"location\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"devStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"version\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public String devId;
  @Deprecated public String displayInfo;
  @Deprecated public String location;
  @Deprecated public String devStatus;
  @Deprecated public String version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HttpDeviceInfo() {}

  /**
   * All-args constructor.
   * @param devId The new value for devId
   * @param displayInfo The new value for displayInfo
   * @param location The new value for location
   * @param devStatus The new value for devStatus
   * @param version The new value for version
   */
  public HttpDeviceInfo(String devId, String displayInfo, String location, String devStatus, String version) {
    this.devId = devId;
    this.displayInfo = displayInfo;
    this.location = location;
    this.devStatus = devStatus;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return devId;
    case 1: return displayInfo;
    case 2: return location;
    case 3: return devStatus;
    case 4: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: devId = (String)value$; break;
    case 1: displayInfo = (String)value$; break;
    case 2: location = (String)value$; break;
    case 3: devStatus = (String)value$; break;
    case 4: version = (String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'devId' field.
   * @return The value of the 'devId' field.
   */
  public String getDevId() {
    return devId;
  }

  /**
   * Sets the value of the 'devId' field.
   * @param value the value to set.
   */
  public void setDevId(String value) {
    this.devId = value;
  }

  /**
   * Gets the value of the 'displayInfo' field.
   * @return The value of the 'displayInfo' field.
   */
  public String getDisplayInfo() {
    return displayInfo;
  }

  /**
   * Sets the value of the 'displayInfo' field.
   * @param value the value to set.
   */
  public void setDisplayInfo(String value) {
    this.displayInfo = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public String getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(String value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'devStatus' field.
   * @return The value of the 'devStatus' field.
   */
  public String getDevStatus() {
    return devStatus;
  }

  /**
   * Sets the value of the 'devStatus' field.
   * @param value the value to set.
   */
  public void setDevStatus(String value) {
    this.devStatus = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public String getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(String value) {
    this.version = value;
  }

  /**
   * Creates a new HttpDeviceInfo RecordBuilder.
   * @return A new HttpDeviceInfo RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder newBuilder() {
    return new com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder();
  }

  /**
   * Creates a new HttpDeviceInfo RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HttpDeviceInfo RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder newBuilder(com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder other) {
    return new com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder(other);
  }

  /**
   * Creates a new HttpDeviceInfo RecordBuilder by copying an existing HttpDeviceInfo instance.
   * @param other The existing instance to copy.
   * @return A new HttpDeviceInfo RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder newBuilder(com.dycn.healthairport.faceplate.avro.HttpDeviceInfo other) {
    return new com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder(other);
  }

  /**
   * RecordBuilder for HttpDeviceInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HttpDeviceInfo>
    implements org.apache.avro.data.RecordBuilder<HttpDeviceInfo> {

    private String devId;
    private String displayInfo;
    private String location;
    private String devStatus;
    private String version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.devId)) {
        this.devId = data().deepCopy(fields()[0].schema(), other.devId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.displayInfo)) {
        this.displayInfo = data().deepCopy(fields()[1].schema(), other.displayInfo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.devStatus)) {
        this.devStatus = data().deepCopy(fields()[3].schema(), other.devStatus);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing HttpDeviceInfo instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.HttpDeviceInfo other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.devId)) {
        this.devId = data().deepCopy(fields()[0].schema(), other.devId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.displayInfo)) {
        this.displayInfo = data().deepCopy(fields()[1].schema(), other.displayInfo);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.devStatus)) {
        this.devStatus = data().deepCopy(fields()[3].schema(), other.devStatus);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.version)) {
        this.version = data().deepCopy(fields()[4].schema(), other.version);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'devId' field.
      * @return The value.
      */
    public String getDevId() {
      return devId;
    }

    /**
      * Sets the value of the 'devId' field.
      * @param value The value of 'devId'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder setDevId(String value) {
      validate(fields()[0], value);
      this.devId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'devId' field has been set.
      * @return True if the 'devId' field has been set, false otherwise.
      */
    public boolean hasDevId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'devId' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder clearDevId() {
      devId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'displayInfo' field.
      * @return The value.
      */
    public String getDisplayInfo() {
      return displayInfo;
    }

    /**
      * Sets the value of the 'displayInfo' field.
      * @param value The value of 'displayInfo'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder setDisplayInfo(String value) {
      validate(fields()[1], value);
      this.displayInfo = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'displayInfo' field has been set.
      * @return True if the 'displayInfo' field has been set, false otherwise.
      */
    public boolean hasDisplayInfo() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'displayInfo' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder clearDisplayInfo() {
      displayInfo = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public String getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder setLocation(String value) {
      validate(fields()[2], value);
      this.location = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder clearLocation() {
      location = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'devStatus' field.
      * @return The value.
      */
    public String getDevStatus() {
      return devStatus;
    }

    /**
      * Sets the value of the 'devStatus' field.
      * @param value The value of 'devStatus'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder setDevStatus(String value) {
      validate(fields()[3], value);
      this.devStatus = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'devStatus' field has been set.
      * @return True if the 'devStatus' field has been set, false otherwise.
      */
    public boolean hasDevStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'devStatus' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder clearDevStatus() {
      devStatus = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public String getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder setVersion(String value) {
      validate(fields()[4], value);
      this.version = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.HttpDeviceInfo.Builder clearVersion() {
      version = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public HttpDeviceInfo build() {
      try {
        HttpDeviceInfo record = new HttpDeviceInfo();
        record.devId = fieldSetFlags()[0] ? this.devId : (String) defaultValue(fields()[0]);
        record.displayInfo = fieldSetFlags()[1] ? this.displayInfo : (String) defaultValue(fields()[1]);
        record.location = fieldSetFlags()[2] ? this.location : (String) defaultValue(fields()[2]);
        record.devStatus = fieldSetFlags()[3] ? this.devStatus : (String) defaultValue(fields()[3]);
        record.version = fieldSetFlags()[4] ? this.version : (String) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
