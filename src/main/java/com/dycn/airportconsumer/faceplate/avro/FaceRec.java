/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dycn.airportconsumer.faceplate.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** 图片中的人脸框rec */
@org.apache.avro.specific.AvroGenerated
public class FaceRec extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -205953288453573934L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FaceRec\",\"namespace\":\"com.dycn.airportconsumer.faceplate.avro\",\"doc\":\"图片中的人脸框rec\",\"fields\":[{\"name\":\"x\",\"type\":\"int\",\"doc\":\"人脸rec左上角x坐标\"},{\"name\":\"y\",\"type\":\"int\",\"doc\":\"人脸rec左上角y坐标\"},{\"name\":\"w\",\"type\":\"int\",\"doc\":\"人脸rec宽度\"},{\"name\":\"h\",\"type\":\"int\",\"doc\":\"人脸rec高度\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 人脸rec左上角x坐标 */
  @Deprecated public int x;
  /** 人脸rec左上角y坐标 */
  @Deprecated public int y;
  /** 人脸rec宽度 */
  @Deprecated public int w;
  /** 人脸rec高度 */
  @Deprecated public int h;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FaceRec() {}

  /**
   * All-args constructor.
   * @param x 人脸rec左上角x坐标
   * @param y 人脸rec左上角y坐标
   * @param w 人脸rec宽度
   * @param h 人脸rec高度
   */
  public FaceRec(Integer x, Integer y, Integer w, Integer h) {
    this.x = x;
    this.y = y;
    this.w = w;
    this.h = h;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return x;
    case 1: return y;
    case 2: return w;
    case 3: return h;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: x = (Integer)value$; break;
    case 1: y = (Integer)value$; break;
    case 2: w = (Integer)value$; break;
    case 3: h = (Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'x' field.
   * @return 人脸rec左上角x坐标
   */
  public Integer getX() {
    return x;
  }

  /**
   * Sets the value of the 'x' field.
   * 人脸rec左上角x坐标
   * @param value the value to set.
   */
  public void setX(Integer value) {
    this.x = value;
  }

  /**
   * Gets the value of the 'y' field.
   * @return 人脸rec左上角y坐标
   */
  public Integer getY() {
    return y;
  }

  /**
   * Sets the value of the 'y' field.
   * 人脸rec左上角y坐标
   * @param value the value to set.
   */
  public void setY(Integer value) {
    this.y = value;
  }

  /**
   * Gets the value of the 'w' field.
   * @return 人脸rec宽度
   */
  public Integer getW() {
    return w;
  }

  /**
   * Sets the value of the 'w' field.
   * 人脸rec宽度
   * @param value the value to set.
   */
  public void setW(Integer value) {
    this.w = value;
  }

  /**
   * Gets the value of the 'h' field.
   * @return 人脸rec高度
   */
  public Integer getH() {
    return h;
  }

  /**
   * Sets the value of the 'h' field.
   * 人脸rec高度
   * @param value the value to set.
   */
  public void setH(Integer value) {
    this.h = value;
  }

  /**
   * Creates a new FaceRec RecordBuilder.
   * @return A new FaceRec RecordBuilder
   */
  public static com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder newBuilder() {
    return new com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder();
  }

  /**
   * Creates a new FaceRec RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FaceRec RecordBuilder
   */
  public static com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder newBuilder(com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder other) {
    return new com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder(other);
  }

  /**
   * Creates a new FaceRec RecordBuilder by copying an existing FaceRec instance.
   * @param other The existing instance to copy.
   * @return A new FaceRec RecordBuilder
   */
  public static com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder newBuilder(com.dycn.airportconsumer.faceplate.avro.FaceRec other) {
    return new com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder(other);
  }

  /**
   * RecordBuilder for FaceRec instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FaceRec>
    implements org.apache.avro.data.RecordBuilder<FaceRec> {

    /** 人脸rec左上角x坐标 */
    private int x;
    /** 人脸rec左上角y坐标 */
    private int y;
    /** 人脸rec宽度 */
    private int w;
    /** 人脸rec高度 */
    private int h;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.x)) {
        this.x = data().deepCopy(fields()[0].schema(), other.x);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.y)) {
        this.y = data().deepCopy(fields()[1].schema(), other.y);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.w)) {
        this.w = data().deepCopy(fields()[2].schema(), other.w);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.h)) {
        this.h = data().deepCopy(fields()[3].schema(), other.h);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing FaceRec instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dycn.airportconsumer.faceplate.avro.FaceRec other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.x)) {
        this.x = data().deepCopy(fields()[0].schema(), other.x);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.y)) {
        this.y = data().deepCopy(fields()[1].schema(), other.y);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.w)) {
        this.w = data().deepCopy(fields()[2].schema(), other.w);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.h)) {
        this.h = data().deepCopy(fields()[3].schema(), other.h);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'x' field.
      * 人脸rec左上角x坐标
      * @return The value.
      */
    public Integer getX() {
      return x;
    }

    /**
      * Sets the value of the 'x' field.
      * 人脸rec左上角x坐标
      * @param value The value of 'x'.
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder setX(int value) {
      validate(fields()[0], value);
      this.x = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'x' field has been set.
      * 人脸rec左上角x坐标
      * @return True if the 'x' field has been set, false otherwise.
      */
    public boolean hasX() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'x' field.
      * 人脸rec左上角x坐标
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder clearX() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'y' field.
      * 人脸rec左上角y坐标
      * @return The value.
      */
    public Integer getY() {
      return y;
    }

    /**
      * Sets the value of the 'y' field.
      * 人脸rec左上角y坐标
      * @param value The value of 'y'.
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder setY(int value) {
      validate(fields()[1], value);
      this.y = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'y' field has been set.
      * 人脸rec左上角y坐标
      * @return True if the 'y' field has been set, false otherwise.
      */
    public boolean hasY() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'y' field.
      * 人脸rec左上角y坐标
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder clearY() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'w' field.
      * 人脸rec宽度
      * @return The value.
      */
    public Integer getW() {
      return w;
    }

    /**
      * Sets the value of the 'w' field.
      * 人脸rec宽度
      * @param value The value of 'w'.
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder setW(int value) {
      validate(fields()[2], value);
      this.w = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'w' field has been set.
      * 人脸rec宽度
      * @return True if the 'w' field has been set, false otherwise.
      */
    public boolean hasW() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'w' field.
      * 人脸rec宽度
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder clearW() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'h' field.
      * 人脸rec高度
      * @return The value.
      */
    public Integer getH() {
      return h;
    }

    /**
      * Sets the value of the 'h' field.
      * 人脸rec高度
      * @param value The value of 'h'.
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder setH(int value) {
      validate(fields()[3], value);
      this.h = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'h' field has been set.
      * 人脸rec高度
      * @return True if the 'h' field has been set, false otherwise.
      */
    public boolean hasH() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'h' field.
      * 人脸rec高度
      * @return This builder.
      */
    public com.dycn.airportconsumer.faceplate.avro.FaceRec.Builder clearH() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public FaceRec build() {
      try {
        FaceRec record = new FaceRec();
        record.x = fieldSetFlags()[0] ? this.x : (Integer) defaultValue(fields()[0]);
        record.y = fieldSetFlags()[1] ? this.y : (Integer) defaultValue(fields()[1]);
        record.w = fieldSetFlags()[2] ? this.w : (Integer) defaultValue(fields()[2]);
        record.h = fieldSetFlags()[3] ? this.h : (Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
