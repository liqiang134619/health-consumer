/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.dycn.airportconsumer.faceplate.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RecentRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 9101758698760487142L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RecentRecord\",\"namespace\":\"com.dycn.healthairport.faceplate.avro\",\"fields\":[{\"name\":\"ID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"记录id\"},{\"name\":\"deviceId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"设备id\"},{\"name\":\"personId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"人像id\"},{\"name\":\"similarity\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"人像比对的相似度\"},{\"name\":\"feature\",\"type\":[\"null\",\"bytes\"],\"doc\":\"特征数据\"},{\"name\":\"isFaceMask\",\"type\":\"boolean\",\"doc\":\"是否戴口罩\"},{\"name\":\"createDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"记录创建时间戳\"},{\"name\":\"lastUpdateDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"记录更新时间戳\"},{\"name\":\"pic\",\"type\":[\"null\",\"bytes\"]},{\"name\":\"faceRec\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"FaceRec\",\"doc\":\"图片中的人脸框rec\",\"fields\":[{\"name\":\"x\",\"type\":\"int\",\"doc\":\"人脸rec左上角x坐标\"},{\"name\":\"y\",\"type\":\"int\",\"doc\":\"人脸rec左上角y坐标\"},{\"name\":\"w\",\"type\":\"int\",\"doc\":\"人脸rec宽度\"},{\"name\":\"h\",\"type\":\"int\",\"doc\":\"人脸rec高度\"}]}],\"doc\":\"图片中的人脸框rec\"},{\"name\":\"picQuality\",\"type\":\"float\",\"doc\":\"图像质量\"},{\"name\":\"isReady\",\"type\":\"boolean\",\"doc\":\"是否可用\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** 记录id */
  @Deprecated public String ID;
  /** 设备id */
  @Deprecated public String deviceId;
  /** 人像id */
  @Deprecated public String personId;
  /** 人像比对的相似度 */
  @Deprecated public String similarity;
  /** 特征数据 */
  @Deprecated public java.nio.ByteBuffer feature;
  /** 是否戴口罩 */
  @Deprecated public boolean isFaceMask;
  /** 记录创建时间戳 */
  @Deprecated public String createDateTime;
  /** 记录更新时间戳 */
  @Deprecated public String lastUpdateDateTime;
  @Deprecated public java.nio.ByteBuffer pic;
  /** 图片中的人脸框rec */
  @Deprecated public com.dycn.healthairport.faceplate.avro.FaceRec faceRec;
  /** 图像质量 */
  @Deprecated public float picQuality;
  /** 是否可用 */
  @Deprecated public boolean isReady;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RecentRecord() {}

  /**
   * All-args constructor.
   * @param ID 记录id
   * @param deviceId 设备id
   * @param personId 人像id
   * @param similarity 人像比对的相似度
   * @param feature 特征数据
   * @param isFaceMask 是否戴口罩
   * @param createDateTime 记录创建时间戳
   * @param lastUpdateDateTime 记录更新时间戳
   * @param pic The new value for pic
   * @param faceRec 图片中的人脸框rec
   * @param picQuality 图像质量
   * @param isReady 是否可用
   */
  public RecentRecord(String ID, String deviceId, String personId, String similarity, java.nio.ByteBuffer feature, Boolean isFaceMask, String createDateTime, String lastUpdateDateTime, java.nio.ByteBuffer pic, com.dycn.healthairport.faceplate.avro.FaceRec faceRec, Float picQuality, Boolean isReady) {
    this.ID = ID;
    this.deviceId = deviceId;
    this.personId = personId;
    this.similarity = similarity;
    this.feature = feature;
    this.isFaceMask = isFaceMask;
    this.createDateTime = createDateTime;
    this.lastUpdateDateTime = lastUpdateDateTime;
    this.pic = pic;
    this.faceRec = faceRec;
    this.picQuality = picQuality;
    this.isReady = isReady;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return deviceId;
    case 2: return personId;
    case 3: return similarity;
    case 4: return feature;
    case 5: return isFaceMask;
    case 6: return createDateTime;
    case 7: return lastUpdateDateTime;
    case 8: return pic;
    case 9: return faceRec;
    case 10: return picQuality;
    case 11: return isReady;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: ID = (String)value$; break;
    case 1: deviceId = (String)value$; break;
    case 2: personId = (String)value$; break;
    case 3: similarity = (String)value$; break;
    case 4: feature = (java.nio.ByteBuffer)value$; break;
    case 5: isFaceMask = (Boolean)value$; break;
    case 6: createDateTime = (String)value$; break;
    case 7: lastUpdateDateTime = (String)value$; break;
    case 8: pic = (java.nio.ByteBuffer)value$; break;
    case 9: faceRec = (com.dycn.healthairport.faceplate.avro.FaceRec)value$; break;
    case 10: picQuality = (Float)value$; break;
    case 11: isReady = (Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   * @return 记录id
   */
  public String getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * 记录id
   * @param value the value to set.
   */
  public void setID(String value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'deviceId' field.
   * @return 设备id
   */
  public String getDeviceId() {
    return deviceId;
  }

  /**
   * Sets the value of the 'deviceId' field.
   * 设备id
   * @param value the value to set.
   */
  public void setDeviceId(String value) {
    this.deviceId = value;
  }

  /**
   * Gets the value of the 'personId' field.
   * @return 人像id
   */
  public String getPersonId() {
    return personId;
  }

  /**
   * Sets the value of the 'personId' field.
   * 人像id
   * @param value the value to set.
   */
  public void setPersonId(String value) {
    this.personId = value;
  }

  /**
   * Gets the value of the 'similarity' field.
   * @return 人像比对的相似度
   */
  public String getSimilarity() {
    return similarity;
  }

  /**
   * Sets the value of the 'similarity' field.
   * 人像比对的相似度
   * @param value the value to set.
   */
  public void setSimilarity(String value) {
    this.similarity = value;
  }

  /**
   * Gets the value of the 'feature' field.
   * @return 特征数据
   */
  public java.nio.ByteBuffer getFeature() {
    return feature;
  }

  /**
   * Sets the value of the 'feature' field.
   * 特征数据
   * @param value the value to set.
   */
  public void setFeature(java.nio.ByteBuffer value) {
    this.feature = value;
  }

  /**
   * Gets the value of the 'isFaceMask' field.
   * @return 是否戴口罩
   */
  public Boolean getIsFaceMask() {
    return isFaceMask;
  }

  /**
   * Sets the value of the 'isFaceMask' field.
   * 是否戴口罩
   * @param value the value to set.
   */
  public void setIsFaceMask(Boolean value) {
    this.isFaceMask = value;
  }

  /**
   * Gets the value of the 'createDateTime' field.
   * @return 记录创建时间戳
   */
  public String getCreateDateTime() {
    return createDateTime;
  }

  /**
   * Sets the value of the 'createDateTime' field.
   * 记录创建时间戳
   * @param value the value to set.
   */
  public void setCreateDateTime(String value) {
    this.createDateTime = value;
  }

  /**
   * Gets the value of the 'lastUpdateDateTime' field.
   * @return 记录更新时间戳
   */
  public String getLastUpdateDateTime() {
    return lastUpdateDateTime;
  }

  /**
   * Sets the value of the 'lastUpdateDateTime' field.
   * 记录更新时间戳
   * @param value the value to set.
   */
  public void setLastUpdateDateTime(String value) {
    this.lastUpdateDateTime = value;
  }

  /**
   * Gets the value of the 'pic' field.
   * @return The value of the 'pic' field.
   */
  public java.nio.ByteBuffer getPic() {
    return pic;
  }

  /**
   * Sets the value of the 'pic' field.
   * @param value the value to set.
   */
  public void setPic(java.nio.ByteBuffer value) {
    this.pic = value;
  }

  /**
   * Gets the value of the 'faceRec' field.
   * @return 图片中的人脸框rec
   */
  public com.dycn.healthairport.faceplate.avro.FaceRec getFaceRec() {
    return faceRec;
  }

  /**
   * Sets the value of the 'faceRec' field.
   * 图片中的人脸框rec
   * @param value the value to set.
   */
  public void setFaceRec(com.dycn.healthairport.faceplate.avro.FaceRec value) {
    this.faceRec = value;
  }

  /**
   * Gets the value of the 'picQuality' field.
   * @return 图像质量
   */
  public Float getPicQuality() {
    return picQuality;
  }

  /**
   * Sets the value of the 'picQuality' field.
   * 图像质量
   * @param value the value to set.
   */
  public void setPicQuality(Float value) {
    this.picQuality = value;
  }

  /**
   * Gets the value of the 'isReady' field.
   * @return 是否可用
   */
  public Boolean getIsReady() {
    return isReady;
  }

  /**
   * Sets the value of the 'isReady' field.
   * 是否可用
   * @param value the value to set.
   */
  public void setIsReady(Boolean value) {
    this.isReady = value;
  }

  /**
   * Creates a new RecentRecord RecordBuilder.
   * @return A new RecentRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.RecentRecord.Builder newBuilder() {
    return new com.dycn.healthairport.faceplate.avro.RecentRecord.Builder();
  }

  /**
   * Creates a new RecentRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RecentRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.RecentRecord.Builder newBuilder(com.dycn.healthairport.faceplate.avro.RecentRecord.Builder other) {
    return new com.dycn.healthairport.faceplate.avro.RecentRecord.Builder(other);
  }

  /**
   * Creates a new RecentRecord RecordBuilder by copying an existing RecentRecord instance.
   * @param other The existing instance to copy.
   * @return A new RecentRecord RecordBuilder
   */
  public static com.dycn.healthairport.faceplate.avro.RecentRecord.Builder newBuilder(com.dycn.healthairport.faceplate.avro.RecentRecord other) {
    return new com.dycn.healthairport.faceplate.avro.RecentRecord.Builder(other);
  }

  /**
   * RecordBuilder for RecentRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RecentRecord>
    implements org.apache.avro.data.RecordBuilder<RecentRecord> {

    /** 记录id */
    private String ID;
    /** 设备id */
    private String deviceId;
    /** 人像id */
    private String personId;
    /** 人像比对的相似度 */
    private String similarity;
    /** 特征数据 */
    private java.nio.ByteBuffer feature;
    /** 是否戴口罩 */
    private boolean isFaceMask;
    /** 记录创建时间戳 */
    private String createDateTime;
    /** 记录更新时间戳 */
    private String lastUpdateDateTime;
    private java.nio.ByteBuffer pic;
    /** 图片中的人脸框rec */
    private com.dycn.healthairport.faceplate.avro.FaceRec faceRec;
    private com.dycn.healthairport.faceplate.avro.FaceRec.Builder faceRecBuilder;
    /** 图像质量 */
    private float picQuality;
    /** 是否可用 */
    private boolean isReady;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.RecentRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[1].schema(), other.deviceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.personId)) {
        this.personId = data().deepCopy(fields()[2].schema(), other.personId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.similarity)) {
        this.similarity = data().deepCopy(fields()[3].schema(), other.similarity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.feature)) {
        this.feature = data().deepCopy(fields()[4].schema(), other.feature);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isFaceMask)) {
        this.isFaceMask = data().deepCopy(fields()[5].schema(), other.isFaceMask);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[6].schema(), other.createDateTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastUpdateDateTime)) {
        this.lastUpdateDateTime = data().deepCopy(fields()[7].schema(), other.lastUpdateDateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pic)) {
        this.pic = data().deepCopy(fields()[8].schema(), other.pic);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.faceRec)) {
        this.faceRec = data().deepCopy(fields()[9].schema(), other.faceRec);
        fieldSetFlags()[9] = true;
      }
      if (other.hasFaceRecBuilder()) {
        this.faceRecBuilder = com.dycn.healthairport.faceplate.avro.FaceRec.newBuilder(other.getFaceRecBuilder());
      }
      if (isValidValue(fields()[10], other.picQuality)) {
        this.picQuality = data().deepCopy(fields()[10].schema(), other.picQuality);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isReady)) {
        this.isReady = data().deepCopy(fields()[11].schema(), other.isReady);
        fieldSetFlags()[11] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing RecentRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(com.dycn.healthairport.faceplate.avro.RecentRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.deviceId)) {
        this.deviceId = data().deepCopy(fields()[1].schema(), other.deviceId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.personId)) {
        this.personId = data().deepCopy(fields()[2].schema(), other.personId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.similarity)) {
        this.similarity = data().deepCopy(fields()[3].schema(), other.similarity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.feature)) {
        this.feature = data().deepCopy(fields()[4].schema(), other.feature);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.isFaceMask)) {
        this.isFaceMask = data().deepCopy(fields()[5].schema(), other.isFaceMask);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createDateTime)) {
        this.createDateTime = data().deepCopy(fields()[6].schema(), other.createDateTime);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.lastUpdateDateTime)) {
        this.lastUpdateDateTime = data().deepCopy(fields()[7].schema(), other.lastUpdateDateTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.pic)) {
        this.pic = data().deepCopy(fields()[8].schema(), other.pic);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.faceRec)) {
        this.faceRec = data().deepCopy(fields()[9].schema(), other.faceRec);
        fieldSetFlags()[9] = true;
      }
      this.faceRecBuilder = null;
      if (isValidValue(fields()[10], other.picQuality)) {
        this.picQuality = data().deepCopy(fields()[10].schema(), other.picQuality);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.isReady)) {
        this.isReady = data().deepCopy(fields()[11].schema(), other.isReady);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'ID' field.
      * 记录id
      * @return The value.
      */
    public String getID() {
      return ID;
    }

    /**
      * Sets the value of the 'ID' field.
      * 记录id
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setID(String value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * 记录id
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ID' field.
      * 记录id
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'deviceId' field.
      * 设备id
      * @return The value.
      */
    public String getDeviceId() {
      return deviceId;
    }

    /**
      * Sets the value of the 'deviceId' field.
      * 设备id
      * @param value The value of 'deviceId'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setDeviceId(String value) {
      validate(fields()[1], value);
      this.deviceId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'deviceId' field has been set.
      * 设备id
      * @return True if the 'deviceId' field has been set, false otherwise.
      */
    public boolean hasDeviceId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'deviceId' field.
      * 设备id
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearDeviceId() {
      deviceId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'personId' field.
      * 人像id
      * @return The value.
      */
    public String getPersonId() {
      return personId;
    }

    /**
      * Sets the value of the 'personId' field.
      * 人像id
      * @param value The value of 'personId'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setPersonId(String value) {
      validate(fields()[2], value);
      this.personId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'personId' field has been set.
      * 人像id
      * @return True if the 'personId' field has been set, false otherwise.
      */
    public boolean hasPersonId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'personId' field.
      * 人像id
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearPersonId() {
      personId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'similarity' field.
      * 人像比对的相似度
      * @return The value.
      */
    public String getSimilarity() {
      return similarity;
    }

    /**
      * Sets the value of the 'similarity' field.
      * 人像比对的相似度
      * @param value The value of 'similarity'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setSimilarity(String value) {
      validate(fields()[3], value);
      this.similarity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'similarity' field has been set.
      * 人像比对的相似度
      * @return True if the 'similarity' field has been set, false otherwise.
      */
    public boolean hasSimilarity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'similarity' field.
      * 人像比对的相似度
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearSimilarity() {
      similarity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'feature' field.
      * 特征数据
      * @return The value.
      */
    public java.nio.ByteBuffer getFeature() {
      return feature;
    }

    /**
      * Sets the value of the 'feature' field.
      * 特征数据
      * @param value The value of 'feature'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setFeature(java.nio.ByteBuffer value) {
      validate(fields()[4], value);
      this.feature = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'feature' field has been set.
      * 特征数据
      * @return True if the 'feature' field has been set, false otherwise.
      */
    public boolean hasFeature() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'feature' field.
      * 特征数据
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearFeature() {
      feature = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'isFaceMask' field.
      * 是否戴口罩
      * @return The value.
      */
    public Boolean getIsFaceMask() {
      return isFaceMask;
    }

    /**
      * Sets the value of the 'isFaceMask' field.
      * 是否戴口罩
      * @param value The value of 'isFaceMask'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setIsFaceMask(boolean value) {
      validate(fields()[5], value);
      this.isFaceMask = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'isFaceMask' field has been set.
      * 是否戴口罩
      * @return True if the 'isFaceMask' field has been set, false otherwise.
      */
    public boolean hasIsFaceMask() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'isFaceMask' field.
      * 是否戴口罩
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearIsFaceMask() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'createDateTime' field.
      * 记录创建时间戳
      * @return The value.
      */
    public String getCreateDateTime() {
      return createDateTime;
    }

    /**
      * Sets the value of the 'createDateTime' field.
      * 记录创建时间戳
      * @param value The value of 'createDateTime'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setCreateDateTime(String value) {
      validate(fields()[6], value);
      this.createDateTime = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'createDateTime' field has been set.
      * 记录创建时间戳
      * @return True if the 'createDateTime' field has been set, false otherwise.
      */
    public boolean hasCreateDateTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'createDateTime' field.
      * 记录创建时间戳
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearCreateDateTime() {
      createDateTime = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastUpdateDateTime' field.
      * 记录更新时间戳
      * @return The value.
      */
    public String getLastUpdateDateTime() {
      return lastUpdateDateTime;
    }

    /**
      * Sets the value of the 'lastUpdateDateTime' field.
      * 记录更新时间戳
      * @param value The value of 'lastUpdateDateTime'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setLastUpdateDateTime(String value) {
      validate(fields()[7], value);
      this.lastUpdateDateTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'lastUpdateDateTime' field has been set.
      * 记录更新时间戳
      * @return True if the 'lastUpdateDateTime' field has been set, false otherwise.
      */
    public boolean hasLastUpdateDateTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'lastUpdateDateTime' field.
      * 记录更新时间戳
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearLastUpdateDateTime() {
      lastUpdateDateTime = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'pic' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getPic() {
      return pic;
    }

    /**
      * Sets the value of the 'pic' field.
      * @param value The value of 'pic'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setPic(java.nio.ByteBuffer value) {
      validate(fields()[8], value);
      this.pic = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'pic' field has been set.
      * @return True if the 'pic' field has been set, false otherwise.
      */
    public boolean hasPic() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'pic' field.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearPic() {
      pic = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'faceRec' field.
      * 图片中的人脸框rec
      * @return The value.
      */
    public com.dycn.healthairport.faceplate.avro.FaceRec getFaceRec() {
      return faceRec;
    }

    /**
      * Sets the value of the 'faceRec' field.
      * 图片中的人脸框rec
      * @param value The value of 'faceRec'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setFaceRec(com.dycn.healthairport.faceplate.avro.FaceRec value) {
      validate(fields()[9], value);
      this.faceRecBuilder = null;
      this.faceRec = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'faceRec' field has been set.
      * 图片中的人脸框rec
      * @return True if the 'faceRec' field has been set, false otherwise.
      */
    public boolean hasFaceRec() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'faceRec' field and creates one if it doesn't exist yet.
     * 图片中的人脸框rec
     * @return This builder.
     */
    public com.dycn.healthairport.faceplate.avro.FaceRec.Builder getFaceRecBuilder() {
      if (faceRecBuilder == null) {
        if (hasFaceRec()) {
          setFaceRecBuilder(com.dycn.healthairport.faceplate.avro.FaceRec.newBuilder(faceRec));
        } else {
          setFaceRecBuilder(com.dycn.healthairport.faceplate.avro.FaceRec.newBuilder());
        }
      }
      return faceRecBuilder;
    }

    /**
     * Sets the Builder instance for the 'faceRec' field
     * 图片中的人脸框rec
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setFaceRecBuilder(com.dycn.healthairport.faceplate.avro.FaceRec.Builder value) {
      clearFaceRec();
      faceRecBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'faceRec' field has an active Builder instance
     * 图片中的人脸框rec
     * @return True if the 'faceRec' field has an active Builder instance
     */
    public boolean hasFaceRecBuilder() {
      return faceRecBuilder != null;
    }

    /**
      * Clears the value of the 'faceRec' field.
      * 图片中的人脸框rec
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearFaceRec() {
      faceRec = null;
      faceRecBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'picQuality' field.
      * 图像质量
      * @return The value.
      */
    public Float getPicQuality() {
      return picQuality;
    }

    /**
      * Sets the value of the 'picQuality' field.
      * 图像质量
      * @param value The value of 'picQuality'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setPicQuality(float value) {
      validate(fields()[10], value);
      this.picQuality = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'picQuality' field has been set.
      * 图像质量
      * @return True if the 'picQuality' field has been set, false otherwise.
      */
    public boolean hasPicQuality() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'picQuality' field.
      * 图像质量
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearPicQuality() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'isReady' field.
      * 是否可用
      * @return The value.
      */
    public Boolean getIsReady() {
      return isReady;
    }

    /**
      * Sets the value of the 'isReady' field.
      * 是否可用
      * @param value The value of 'isReady'.
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder setIsReady(boolean value) {
      validate(fields()[11], value);
      this.isReady = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'isReady' field has been set.
      * 是否可用
      * @return True if the 'isReady' field has been set, false otherwise.
      */
    public boolean hasIsReady() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'isReady' field.
      * 是否可用
      * @return This builder.
      */
    public com.dycn.healthairport.faceplate.avro.RecentRecord.Builder clearIsReady() {
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    public RecentRecord build() {
      try {
        RecentRecord record = new RecentRecord();
        record.ID = fieldSetFlags()[0] ? this.ID : (String) defaultValue(fields()[0]);
        record.deviceId = fieldSetFlags()[1] ? this.deviceId : (String) defaultValue(fields()[1]);
        record.personId = fieldSetFlags()[2] ? this.personId : (String) defaultValue(fields()[2]);
        record.similarity = fieldSetFlags()[3] ? this.similarity : (String) defaultValue(fields()[3]);
        record.feature = fieldSetFlags()[4] ? this.feature : (java.nio.ByteBuffer) defaultValue(fields()[4]);
        record.isFaceMask = fieldSetFlags()[5] ? this.isFaceMask : (Boolean) defaultValue(fields()[5]);
        record.createDateTime = fieldSetFlags()[6] ? this.createDateTime : (String) defaultValue(fields()[6]);
        record.lastUpdateDateTime = fieldSetFlags()[7] ? this.lastUpdateDateTime : (String) defaultValue(fields()[7]);
        record.pic = fieldSetFlags()[8] ? this.pic : (java.nio.ByteBuffer) defaultValue(fields()[8]);
        if (faceRecBuilder != null) {
          record.faceRec = this.faceRecBuilder.build();
        } else {
          record.faceRec = fieldSetFlags()[9] ? this.faceRec : (com.dycn.healthairport.faceplate.avro.FaceRec) defaultValue(fields()[9]);
        }
        record.picQuality = fieldSetFlags()[10] ? this.picQuality : (Float) defaultValue(fields()[10]);
        record.isReady = fieldSetFlags()[11] ? this.isReady : (Boolean) defaultValue(fields()[11]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
